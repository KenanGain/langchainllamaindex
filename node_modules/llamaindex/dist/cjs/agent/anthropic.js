"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    AnthropicAgent: function() {
        return AnthropicAgent;
    },
    AnthropicAgentWorker: function() {
        return AnthropicAgentWorker;
    }
});
const _agent = require("@llamaindex/core/agent");
const _Settings = require("../Settings.js");
const _anthropic = require("../llm/anthropic.js");
class AnthropicAgentWorker extends _agent.LLMAgentWorker {
}
class AnthropicAgent extends _agent.LLMAgent {
    constructor(params){
        const llm = params.llm ?? (_Settings.Settings.llm instanceof _anthropic.Anthropic ? _Settings.Settings.llm : new _anthropic.Anthropic());
        super({
            ...params,
            llm
        });
    }
    async chat(params) {
        const { stream } = params;
        if (stream) {
            // Anthropic does support this, but looks like it's not supported in the LITS LLM
            throw new Error("Anthropic does not support streaming");
        }
        return super.chat(params);
    }
}
